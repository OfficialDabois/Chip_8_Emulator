#pragma once
#include <iostream>
#include <fstream>
#include <array>

#define FIRSTNIB(h) (h & 0x000F)
#define SECONDNIB(h) (h & 0x00F0) >> 4
#define THIRDNIB(h) (h & 0x0F00) >> 8

class Chip8 {
    const uint8_t width = 64;
    const uint8_t height = 32;

    const uint8_t FONT[80] = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };

    std::array<uint8_t, 4096> RAM;
    std::array<uint16_t, 32> STACK;

    uint8_t SP;
    uint16_t PC;
    uint16_t I;
    bool jf = false;

    uint8_t dt;
    uint8_t st;

    std::array<uint8_t, 16> V;

    long cycles;
public:
    bool FRAMEBUFFER[2048];
    bool cosmac;

    Chip8();

    bool LoadRom(const char* filename);

    void OneCycle();
};